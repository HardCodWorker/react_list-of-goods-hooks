{"version":3,"sources":["App.tsx","index.tsx"],"names":["Sortype","goodsFromServer","App","useState","Empty","sortType","setSortType","reversed","setReverse","displayGoods","goods","preparedGoods","sort","good1","good2","Alphabetic","localeCompare","Length","length","reverse","getPreaparedGoods","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,wBAAAA,E,gBAAAA,E,UAAAA,M,KA8BE,IAAME,EAAgB,WAC3B,MAAgCC,mBAASH,EAAQI,OAAjD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA+BH,oBAAS,GAAxC,mBAAOI,EAAP,KAAiBC,EAAjB,KACMC,EA3BR,SAA2BC,EACzBL,EACAE,GACA,IAAMI,EAAuB,YAAOD,GAcpC,OAZAC,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQT,GACN,KAAKL,EAAQe,WACX,OAAOF,EAAMG,cAAcF,GAE7B,KAAKd,EAAQiB,OACX,OAAOJ,EAAMK,OAASJ,EAAMI,OAE9B,QAAS,OAAO,MAIhBX,EACKI,EAAcQ,UAGhBR,EAOHS,CAAkBnB,EAAiBI,EAAUE,GAEjD,OAEE,sBAAKc,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAYlB,IAAaL,EAAQe,aAErCS,QAAS,kBAAMlB,EAAYN,EAAQe,aANrC,iCAWA,wBACEO,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,WAAYlB,IAAaL,EAAQiB,SAErCO,QAAS,kBAAMlB,EAAYN,EAAQiB,SANrC,4BAWA,wBACEK,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,YAAahB,IAEjBiB,QAAS,kBAAMhB,GAAYD,IAN7B,sBAUEA,GAAYF,IAEV,wBACEiB,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPhB,GAAW,GACXF,EAAYN,EAAQI,QALxB,sBAaN,6BACGK,EAAagB,KAAI,SAACC,GAAD,OAChB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YCxGlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.f675c6cd.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport cn from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum Sortype {\n  Alphabetic = 'alphabetic',\n  Length = 'length',\n  Empty = '',\n}\n\nfunction getPreaparedGoods(goods: string[],\n  sortType: Sortype,\n  reversed: boolean) {\n  const preparedGoods: string[] = [...goods];\n\n  preparedGoods.sort((good1, good2) => {\n    switch (sortType) {\n      case Sortype.Alphabetic:\n        return good1.localeCompare(good2);\n\n      case Sortype.Length:\n        return good1.length - good2.length;\n\n      default: return 0;\n    }\n  });\n\n  if (reversed) {\n    return preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortType, setSortType] = useState(Sortype.Empty);\n  const [reversed, setReverse] = useState(false);\n  const displayGoods\n    = getPreaparedGoods(goodsFromServer, sortType, reversed);\n\n  return (\n\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn(\n            'button is-info',\n            { 'is-light': sortType !== Sortype.Alphabetic },\n          )}\n          onClick={() => setSortType(Sortype.Alphabetic)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button is-success',\n            { 'is-light': sortType !== Sortype.Length },\n          )}\n          onClick={() => setSortType(Sortype.Length)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button is-warning',\n            { 'is-light': !reversed },\n          )}\n          onClick={() => setReverse(!reversed)}\n        >\n          Reverse\n        </button>\n        {(reversed || sortType)\n          && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={() => {\n                setReverse(false);\n                setSortType(Sortype.Empty);\n              }}\n            >\n              Reset\n            </button>\n          )}\n      </div>\n\n      <ul>\n        {displayGoods.map((good:string) => (\n          <li data-cy=\"Good\" key={good}>{good}</li>\n        ))}\n\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}